/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  BigNumberish,
  Overrides,
} from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type { Token, TokenInterface } from "../../../contracts/Token.sol/Token";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "string",
        name: "_name",
        type: "string",
      },
      {
        internalType: "string",
        name: "_symbol",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "initialSupply",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "subtractedValue",
        type: "uint256",
      },
    ],
    name: "decreaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "addedValue",
        type: "uint256",
      },
    ],
    name: "increaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b5060405162001cad38038062001cad833981810160405281019062000037919062000430565b828281600390816200004a919062000721565b5080600490816200005c919062000721565b5050506200007184826200007b60201b60201c565b5050505062000923565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603620000ed576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401620000e49062000869565b60405180910390fd5b6200010160008383620001f360201b60201c565b8060026000828254620001159190620008ba565b92505081905550806000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546200016c9190620008ba565b925050819055508173ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef83604051620001d3919062000906565b60405180910390a3620001ef60008383620001f860201b60201c565b5050565b505050565b505050565b6000604051905090565b600080fd5b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006200023e8262000211565b9050919050565b620002508162000231565b81146200025c57600080fd5b50565b600081519050620002708162000245565b92915050565b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b620002cb8262000280565b810181811067ffffffffffffffff82111715620002ed57620002ec62000291565b5b80604052505050565b600062000302620001fd565b9050620003108282620002c0565b919050565b600067ffffffffffffffff82111562000333576200033262000291565b5b6200033e8262000280565b9050602081019050919050565b60005b838110156200036b5780820151818401526020810190506200034e565b60008484015250505050565b60006200038e620003888462000315565b620002f6565b905082815260208101848484011115620003ad57620003ac6200027b565b5b620003ba8482856200034b565b509392505050565b600082601f830112620003da57620003d962000276565b5b8151620003ec84826020860162000377565b91505092915050565b6000819050919050565b6200040a81620003f5565b81146200041657600080fd5b50565b6000815190506200042a81620003ff565b92915050565b600080600080608085870312156200044d576200044c62000207565b5b60006200045d878288016200025f565b945050602085015167ffffffffffffffff8111156200048157620004806200020c565b5b6200048f87828801620003c2565b935050604085015167ffffffffffffffff811115620004b357620004b26200020c565b5b620004c187828801620003c2565b9250506060620004d48782880162000419565b91505092959194509250565b600081519050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600060028204905060018216806200053357607f821691505b602082108103620005495762000548620004eb565b5b50919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b600060088302620005b37fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8262000574565b620005bf868362000574565b95508019841693508086168417925050509392505050565b6000819050919050565b600062000602620005fc620005f684620003f5565b620005d7565b620003f5565b9050919050565b6000819050919050565b6200061e83620005e1565b620006366200062d8262000609565b84845462000581565b825550505050565b600090565b6200064d6200063e565b6200065a81848462000613565b505050565b5b8181101562000682576200067660008262000643565b60018101905062000660565b5050565b601f821115620006d1576200069b816200054f565b620006a68462000564565b81016020851015620006b6578190505b620006ce620006c58562000564565b8301826200065f565b50505b505050565b600082821c905092915050565b6000620006f660001984600802620006d6565b1980831691505092915050565b6000620007118383620006e3565b9150826002028217905092915050565b6200072c82620004e0565b67ffffffffffffffff81111562000748576200074762000291565b5b6200075482546200051a565b6200076182828562000686565b600060209050601f83116001811462000799576000841562000784578287015190505b62000790858262000703565b86555062000800565b601f198416620007a9866200054f565b60005b82811015620007d357848901518255600182019150602085019450602081019050620007ac565b86831015620007f35784890151620007ef601f891682620006e3565b8355505b6001600288020188555050505b505050505050565b600082825260208201905092915050565b7f45524332303a206d696e7420746f20746865207a65726f206164647265737300600082015250565b600062000851601f8362000808565b91506200085e8262000819565b602082019050919050565b60006020820190508181036000830152620008848162000842565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000620008c782620003f5565b9150620008d483620003f5565b9250828201905080821115620008ef57620008ee6200088b565b5b92915050565b6200090081620003f5565b82525050565b60006020820190506200091d6000830184620008f5565b92915050565b61137a80620009336000396000f3fe608060405234801561001057600080fd5b50600436106100a95760003560e01c80633950935111610071578063395093511461016857806370a082311461019857806395d89b41146101c8578063a457c2d7146101e6578063a9059cbb14610216578063dd62ed3e14610246576100a9565b806306fdde03146100ae578063095ea7b3146100cc57806318160ddd146100fc57806323b872dd1461011a578063313ce5671461014a575b600080fd5b6100b6610276565b6040516100c39190610c31565b60405180910390f35b6100e660048036038101906100e19190610cec565b610308565b6040516100f39190610d47565b60405180910390f35b610104610326565b6040516101119190610d71565b60405180910390f35b610134600480360381019061012f9190610d8c565b610330565b6040516101419190610d47565b60405180910390f35b610152610428565b60405161015f9190610dfb565b60405180910390f35b610182600480360381019061017d9190610cec565b610431565b60405161018f9190610d47565b60405180910390f35b6101b260048036038101906101ad9190610e16565b6104dd565b6040516101bf9190610d71565b60405180910390f35b6101d0610525565b6040516101dd9190610c31565b60405180910390f35b61020060048036038101906101fb9190610cec565b6105b7565b60405161020d9190610d47565b60405180910390f35b610230600480360381019061022b9190610cec565b6106a2565b60405161023d9190610d47565b60405180910390f35b610260600480360381019061025b9190610e43565b6106c0565b60405161026d9190610d71565b60405180910390f35b60606003805461028590610eb2565b80601f01602080910402602001604051908101604052809291908181526020018280546102b190610eb2565b80156102fe5780601f106102d3576101008083540402835291602001916102fe565b820191906000526020600020905b8154815290600101906020018083116102e157829003601f168201915b5050505050905090565b600061031c610315610747565b848461074f565b6001905092915050565b6000600254905090565b600061033d848484610918565b6000600160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000610388610747565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905082811015610408576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103ff90610f55565b60405180910390fd5b61041c85610414610747565b85840361074f565b60019150509392505050565b60006012905090565b60006104d361043e610747565b84846001600061044c610747565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546104ce9190610fa4565b61074f565b6001905092915050565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b60606004805461053490610eb2565b80601f016020809104026020016040519081016040528092919081815260200182805461056090610eb2565b80156105ad5780601f10610582576101008083540402835291602001916105ad565b820191906000526020600020905b81548152906001019060200180831161059057829003601f168201915b5050505050905090565b600080600160006105c6610747565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905082811015610683576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161067a9061104a565b60405180910390fd5b61069761068e610747565b8585840361074f565b600191505092915050565b60006106b66106af610747565b8484610918565b6001905092915050565b6000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b600033905090565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16036107be576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107b5906110dc565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff160361082d576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108249061116e565b60405180910390fd5b80600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9258360405161090b9190610d71565b60405180910390a3505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610987576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161097e90611200565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036109f6576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109ed90611292565b60405180910390fd5b610a01838383610b97565b60008060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905081811015610a87576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a7e90611324565b60405180910390fd5b8181036000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550816000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254610b1a9190610fa4565b925050819055508273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef84604051610b7e9190610d71565b60405180910390a3610b91848484610b9c565b50505050565b505050565b505050565b600081519050919050565b600082825260208201905092915050565b60005b83811015610bdb578082015181840152602081019050610bc0565b60008484015250505050565b6000601f19601f8301169050919050565b6000610c0382610ba1565b610c0d8185610bac565b9350610c1d818560208601610bbd565b610c2681610be7565b840191505092915050565b60006020820190508181036000830152610c4b8184610bf8565b905092915050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610c8382610c58565b9050919050565b610c9381610c78565b8114610c9e57600080fd5b50565b600081359050610cb081610c8a565b92915050565b6000819050919050565b610cc981610cb6565b8114610cd457600080fd5b50565b600081359050610ce681610cc0565b92915050565b60008060408385031215610d0357610d02610c53565b5b6000610d1185828601610ca1565b9250506020610d2285828601610cd7565b9150509250929050565b60008115159050919050565b610d4181610d2c565b82525050565b6000602082019050610d5c6000830184610d38565b92915050565b610d6b81610cb6565b82525050565b6000602082019050610d866000830184610d62565b92915050565b600080600060608486031215610da557610da4610c53565b5b6000610db386828701610ca1565b9350506020610dc486828701610ca1565b9250506040610dd586828701610cd7565b9150509250925092565b600060ff82169050919050565b610df581610ddf565b82525050565b6000602082019050610e106000830184610dec565b92915050565b600060208284031215610e2c57610e2b610c53565b5b6000610e3a84828501610ca1565b91505092915050565b60008060408385031215610e5a57610e59610c53565b5b6000610e6885828601610ca1565b9250506020610e7985828601610ca1565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b60006002820490506001821680610eca57607f821691505b602082108103610edd57610edc610e83565b5b50919050565b7f45524332303a207472616e7366657220616d6f756e742065786365656473206160008201527f6c6c6f77616e6365000000000000000000000000000000000000000000000000602082015250565b6000610f3f602883610bac565b9150610f4a82610ee3565b604082019050919050565b60006020820190508181036000830152610f6e81610f32565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610faf82610cb6565b9150610fba83610cb6565b9250828201905080821115610fd257610fd1610f75565b5b92915050565b7f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f7760008201527f207a65726f000000000000000000000000000000000000000000000000000000602082015250565b6000611034602583610bac565b915061103f82610fd8565b604082019050919050565b6000602082019050818103600083015261106381611027565b9050919050565b7f45524332303a20617070726f76652066726f6d20746865207a65726f2061646460008201527f7265737300000000000000000000000000000000000000000000000000000000602082015250565b60006110c6602483610bac565b91506110d18261106a565b604082019050919050565b600060208201905081810360008301526110f5816110b9565b9050919050565b7f45524332303a20617070726f766520746f20746865207a65726f20616464726560008201527f7373000000000000000000000000000000000000000000000000000000000000602082015250565b6000611158602283610bac565b9150611163826110fc565b604082019050919050565b600060208201905081810360008301526111878161114b565b9050919050565b7f45524332303a207472616e736665722066726f6d20746865207a65726f20616460008201527f6472657373000000000000000000000000000000000000000000000000000000602082015250565b60006111ea602583610bac565b91506111f58261118e565b604082019050919050565b60006020820190508181036000830152611219816111dd565b9050919050565b7f45524332303a207472616e7366657220746f20746865207a65726f206164647260008201527f6573730000000000000000000000000000000000000000000000000000000000602082015250565b600061127c602383610bac565b915061128782611220565b604082019050919050565b600060208201905081810360008301526112ab8161126f565b9050919050565b7f45524332303a207472616e7366657220616d6f756e742065786365656473206260008201527f616c616e63650000000000000000000000000000000000000000000000000000602082015250565b600061130e602683610bac565b9150611319826112b2565b604082019050919050565b6000602082019050818103600083015261133d81611301565b905091905056fea26469706673582212201820bd6abef40215c786bbddf0171b9da9cb0c94c4743519f5363b4b1766a8cc64736f6c63430008110033";

type TokenConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: TokenConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Token__factory extends ContractFactory {
  constructor(...args: TokenConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    to: PromiseOrValue<string>,
    _name: PromiseOrValue<string>,
    _symbol: PromiseOrValue<string>,
    initialSupply: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<Token> {
    return super.deploy(
      to,
      _name,
      _symbol,
      initialSupply,
      overrides || {}
    ) as Promise<Token>;
  }
  override getDeployTransaction(
    to: PromiseOrValue<string>,
    _name: PromiseOrValue<string>,
    _symbol: PromiseOrValue<string>,
    initialSupply: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      to,
      _name,
      _symbol,
      initialSupply,
      overrides || {}
    );
  }
  override attach(address: string): Token {
    return super.attach(address) as Token;
  }
  override connect(signer: Signer): Token__factory {
    return super.connect(signer) as Token__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): TokenInterface {
    return new utils.Interface(_abi) as TokenInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): Token {
    return new Contract(address, _abi, signerOrProvider) as Token;
  }
}
