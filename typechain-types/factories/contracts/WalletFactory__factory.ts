/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type {
  WalletFactory,
  WalletFactoryInterface,
} from "../../contracts/WalletFactory";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_forwarder",
        type: "address",
      },
      {
        internalType: "address",
        name: "_feeReceiver",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "_from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "_delegate",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "feeReceiver",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "fee",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "salt",
        type: "uint256",
      },
    ],
    name: "Execute",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "_addr",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "_sender",
        type: "address",
      },
    ],
    name: "NewWallet",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "salt",
        type: "uint256",
      },
    ],
    name: "calcSpenderAddress",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_salt",
        type: "uint256",
      },
    ],
    name: "createWallet",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "feeReceiver",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_token",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_salt",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_fee",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_weiValue",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "_delegate",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "_callData",
        type: "bytes",
      },
    ],
    name: "gaslessExecute",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "getCreationCode",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_sender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "salt",
        type: "uint256",
      },
    ],
    name: "getGaslessAddress",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getTrustedForwarder",
    outputs: [
      {
        internalType: "address",
        name: "forwarder",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "forwarder",
        type: "address",
      },
    ],
    name: "isTrustedForwarder",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "manager",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_feeReceiver",
        type: "address",
      },
    ],
    name: "setFeeReceiver",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_forwarder",
        type: "address",
      },
    ],
    name: "setForwarder",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address payable",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "withdrawETH",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b50604051620024ad380380620024ad83398181016040528101906200003791906200017f565b6200004882620000d260201b60201c565b33600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555080600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505050620001c6565b806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600062000147826200011a565b9050919050565b62000159816200013a565b81146200016557600080fd5b50565b60008151905062000179816200014e565b92915050565b6000806040838503121562000199576200019862000115565b5b6000620001a98582860162000168565b9250506020620001bc8582860162000168565b9150509250929050565b6122d780620001d66000396000f3fe608060405234801561001057600080fd5b50600436106100e95760003560e01c80638da5cb5b1161008c578063b9998a2411610066578063b9998a241461024c578063ce1b815f14610268578063d9caed1214610286578063efdcd974146102a2576100e9565b80638da5cb5b146101de578063b3f00674146101fc578063b58f765a1461021a576100e9565b8063481c6a75116100c8578063481c6a7514610158578063572b6c05146101765780636619173a146101a65780637a675bb6146101c2576100e9565b8062c194db146100ee578063168e868f1461010c5780634782f7791461013c575b600080fd5b6100f66102be565b6040516101039190610ea3565b60405180910390f35b61012660048036038101906101219190610f63565b6102e9565b6040516101339190610fb2565b60405180910390f35b6101566004803603810190610151919061100b565b610384565b005b610160610466565b60405161016d9190610fb2565b60405180910390f35b610190600480360381019061018b919061104b565b61048c565b60405161019d9190611093565b60405180910390f35b6101c060048036038101906101bb9190611113565b6104e5565b005b6101dc60048036038101906101d791906111c2565b610807565b005b6101e66109bc565b6040516101f39190610fb2565b60405180910390f35b6102046109e2565b6040516102119190610fb2565b60405180910390f35b610234600480360381019061022f91906111c2565b610a08565b604051610243939291906111ef565b60405180910390f35b6102666004803603810190610261919061104b565b610aab565b005b610270610b4e565b60405161027d9190610fb2565b60405180910390f35b6102a0600480360381019061029b9190611226565b610b77565b005b6102bc60048036038101906102b7919061104b565b610c98565b005b6060604051806020016102d090610e06565b6020820181038252601f19601f82011660405250905090565b60008083836040516020016102ff929190611288565b604051602081830303815290604052805190602001209050600060ff60f81b30836040518060200161033090610e06565b6020820181038252601f19601f820116604052508051906020012060405160200161035e9493929190611371565b6040516020818303038152906040528051906020012060001c9050809250505092915050565b61038c610d73565b73ffffffffffffffffffffffffffffffffffffffff16600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161461041b576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104129061141c565b60405180910390fd5b8173ffffffffffffffffffffffffffffffffffffffff166108fc829081150290604051600060405180830381858888f19350505050158015610461573d6000803e3d6000fd5b505050565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16149050919050565b60006104ef610d73565b905060003073ffffffffffffffffffffffffffffffffffffffff1663168e868f838a6040518363ffffffff1660e01b815260040161052e929190611288565b602060405180830381865afa15801561054b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061056f9190611451565b9050600081905061057f82610daa565b6106b0576000838a604051602001610598929190611288565b604051602081830303815290604052805190602001209050806040516105bd90610e06565b8190604051809103906000f59050801580156105dd573d6000803e3d6000fd5b5091508173ffffffffffffffffffffffffffffffffffffffff1663485cc95530610605610d73565b6040518363ffffffff1660e01b815260040161062292919061147e565b600060405180830381600087803b15801561063c57600080fd5b505af1158015610650573d6000803e3d6000fd5b505050508373ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167fad99b4cdeb342f8df51bd1f7c20113a98559ff13b06d1c77cc051964d7489d2b60405160405180910390a3505b8073ffffffffffffffffffffffffffffffffffffffff1663624e1b308b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff168b8b8b8b8b6040518863ffffffff1660e01b815260040161071797969594939291906114f2565b6020604051808303816000875af1158015610736573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061075a9190611588565b50600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168673ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167f161baf8e4defb06e33402fef393601c6b32d7ad4319e3f08d907f94f4ec8fff98b8d6040516107f39291906115b5565b60405180910390a450505050505050505050565b61080f610d73565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461087c576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108739061141c565b60405180910390fd5b6000610886610d73565b82604051602001610898929190611288565b6040516020818303038152906040528051906020012090506000816040516108bf90610e06565b8190604051809103906000f59050801580156108df573d6000803e3d6000fd5b5090508073ffffffffffffffffffffffffffffffffffffffff1663485cc95530610907610d73565b6040518363ffffffff1660e01b815260040161092492919061147e565b600060405180830381600087803b15801561093e57600080fd5b505af1158015610952573d6000803e3d6000fd5b5050505061095e610d73565b73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167fad99b4cdeb342f8df51bd1f7c20113a98559ff13b06d1c77cc051964d7489d2b60405160405180910390a3505050565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000806000803073ffffffffffffffffffffffffffffffffffffffff1663168e868f610a32610d73565b876040518363ffffffff1660e01b8152600401610a50929190611288565b602060405180830381865afa158015610a6d573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a919190611451565b90508030610a9d610d73565b935093509350509193909250565b610ab3610d73565b73ffffffffffffffffffffffffffffffffffffffff16600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614610b42576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b399061141c565b60405180910390fd5b610b4b81610dc3565b50565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b610b7f610d73565b73ffffffffffffffffffffffffffffffffffffffff16600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614610c0e576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c059061141c565b60405180910390fd5b60008390508073ffffffffffffffffffffffffffffffffffffffff1663a9059cbb84846040518363ffffffff1660e01b8152600401610c4e929190611288565b6020604051808303816000875af1158015610c6d573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c919190611588565b5050505050565b610ca0610d73565b73ffffffffffffffffffffffffffffffffffffffff16600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614610d2f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d269061141c565b60405180910390fd5b80600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b60006014600036905010158015610d8f5750610d8e3361048c565b5b15610da357601436033560601c9050610da7565b3390505b90565b600080823b905060008163ffffffff1611915050919050565b806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b610cc3806115df83390190565b600081519050919050565b600082825260208201905092915050565b60005b83811015610e4d578082015181840152602081019050610e32565b60008484015250505050565b6000601f19601f8301169050919050565b6000610e7582610e13565b610e7f8185610e1e565b9350610e8f818560208601610e2f565b610e9881610e59565b840191505092915050565b60006020820190508181036000830152610ebd8184610e6a565b905092915050565b600080fd5b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610efa82610ecf565b9050919050565b610f0a81610eef565b8114610f1557600080fd5b50565b600081359050610f2781610f01565b92915050565b6000819050919050565b610f4081610f2d565b8114610f4b57600080fd5b50565b600081359050610f5d81610f37565b92915050565b60008060408385031215610f7a57610f79610ec5565b5b6000610f8885828601610f18565b9250506020610f9985828601610f4e565b9150509250929050565b610fac81610eef565b82525050565b6000602082019050610fc76000830184610fa3565b92915050565b6000610fd882610ecf565b9050919050565b610fe881610fcd565b8114610ff357600080fd5b50565b60008135905061100581610fdf565b92915050565b6000806040838503121561102257611021610ec5565b5b600061103085828601610ff6565b925050602061104185828601610f4e565b9150509250929050565b60006020828403121561106157611060610ec5565b5b600061106f84828501610f18565b91505092915050565b60008115159050919050565b61108d81611078565b82525050565b60006020820190506110a86000830184611084565b92915050565b600080fd5b600080fd5b600080fd5b60008083601f8401126110d3576110d26110ae565b5b8235905067ffffffffffffffff8111156110f0576110ef6110b3565b5b60208301915083600182028301111561110c5761110b6110b8565b5b9250929050565b600080600080600080600060c0888a03121561113257611131610ec5565b5b60006111408a828b01610f18565b97505060206111518a828b01610f4e565b96505060406111628a828b01610f4e565b95505060606111738a828b01610f4e565b94505060806111848a828b01610f18565b93505060a088013567ffffffffffffffff8111156111a5576111a4610eca565b5b6111b18a828b016110bd565b925092505092959891949750929550565b6000602082840312156111d8576111d7610ec5565b5b60006111e684828501610f4e565b91505092915050565b60006060820190506112046000830186610fa3565b6112116020830185610fa3565b61121e6040830184610fa3565b949350505050565b60008060006060848603121561123f5761123e610ec5565b5b600061124d86828701610f18565b935050602061125e86828701610f18565b925050604061126f86828701610f4e565b9150509250925092565b61128281610f2d565b82525050565b600060408201905061129d6000830185610fa3565b6112aa6020830184611279565b9392505050565b60007fff0000000000000000000000000000000000000000000000000000000000000082169050919050565b6000819050919050565b6112f86112f3826112b1565b6112dd565b82525050565b60008160601b9050919050565b6000611316826112fe565b9050919050565b60006113288261130b565b9050919050565b61134061133b82610eef565b61131d565b82525050565b6000819050919050565b6000819050919050565b61136b61136682611346565b611350565b82525050565b600061137d82876112e7565b60018201915061138d828661132f565b60148201915061139d828561135a565b6020820191506113ad828461135a565b60208201915081905095945050505050565b600082825260208201905092915050565b7f3a2063616c6c6572206973206e6f7420746865206f776e657200000000000000600082015250565b60006114066019836113bf565b9150611411826113d0565b602082019050919050565b60006020820190508181036000830152611435816113f9565b9050919050565b60008151905061144b81610f01565b92915050565b60006020828403121561146757611466610ec5565b5b60006114758482850161143c565b91505092915050565b60006040820190506114936000830185610fa3565b6114a06020830184610fa3565b9392505050565b6114b081610fcd565b82525050565b82818337600083830152505050565b60006114d18385610e1e565b93506114de8385846114b6565b6114e783610e59565b840190509392505050565b600060c082019050611507600083018a610fa3565b61151460208301896114a7565b6115216040830188611279565b61152e6060830187611279565b61153b6080830186610fa3565b81810360a083015261154e8184866114c5565b905098975050505050505050565b61156581611078565b811461157057600080fd5b50565b6000815190506115828161155c565b92915050565b60006020828403121561159e5761159d610ec5565b5b60006115ac84828501611573565b91505092915050565b60006040820190506115ca6000830185611279565b6115d76020830184611279565b939250505056fe608060405234801561001057600080fd5b50610ca3806100206000396000f3fe60806040526004361061004e5760003560e01c8063485cc95514610057578063624e1b3014610080578063710a9f68146100bd5780638da5cb5b146100fa578063c45a01551461012557610055565b3661005557005b005b34801561006357600080fd5b5061007e6004803603810190610079919061065c565b610150565b005b34801561008c57600080fd5b506100a760048036038101906100a29190610775565b610225565b6040516100b4919061083f565b60405180910390f35b3480156100c957600080fd5b506100e460048036038101906100df919061085a565b6103d6565b6040516100f1919061083f565b60405180910390f35b34801561010657600080fd5b5061010f61047d565b60405161011c91906108dd565b60405180910390f35b34801561013157600080fd5b5061013a6104a1565b60405161014791906108dd565b60405180910390f35b600160149054906101000a900460ff16156101a0576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161019790610955565b60405180910390fd5b806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555081600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505050565b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146102b7576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102ae906109c1565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168873ffffffffffffffffffffffffffffffffffffffff1603610337578673ffffffffffffffffffffffffffffffffffffffff166108fc879081150290604051600060405180830381858888f19350505050158015610331573d6000803e3d6000fd5b506103bd565b60008890508073ffffffffffffffffffffffffffffffffffffffff1663a9059cbb89896040518363ffffffff1660e01b8152600401610377929190610a4f565b6020604051808303816000875af1158015610396573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103ba9190610aa4565b50505b6103c9858585856104c7565b9050979650505050505050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610467576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161045e90610b1d565b60405180910390fd5b610473858585856104c7565b9050949350505050565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60008073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1603610537576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161052e90610b89565b60405180910390fd5b60008473ffffffffffffffffffffffffffffffffffffffff16868585604051610561929190610be8565b60006040518083038185875af1925050503d806000811461059e576040519150601f19603f3d011682016040523d82523d6000602084013e6105a3565b606091505b50509050806105e7576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105de90610c4d565b60405180910390fd5b6001915050949350505050565b600080fd5b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610629826105fe565b9050919050565b6106398161061e565b811461064457600080fd5b50565b60008135905061065681610630565b92915050565b60008060408385031215610673576106726105f4565b5b600061068185828601610647565b925050602061069285828601610647565b9150509250929050565b60006106a7826105fe565b9050919050565b6106b78161069c565b81146106c257600080fd5b50565b6000813590506106d4816106ae565b92915050565b6000819050919050565b6106ed816106da565b81146106f857600080fd5b50565b60008135905061070a816106e4565b92915050565b600080fd5b600080fd5b600080fd5b60008083601f84011261073557610734610710565b5b8235905067ffffffffffffffff81111561075257610751610715565b5b60208301915083600182028301111561076e5761076d61071a565b5b9250929050565b600080600080600080600060c0888a031215610794576107936105f4565b5b60006107a28a828b01610647565b97505060206107b38a828b016106c5565b96505060406107c48a828b016106fb565b95505060606107d58a828b016106fb565b94505060806107e68a828b01610647565b93505060a088013567ffffffffffffffff811115610807576108066105f9565b5b6108138a828b0161071f565b925092505092959891949750929550565b60008115159050919050565b61083981610824565b82525050565b60006020820190506108546000830184610830565b92915050565b60008060008060608587031215610874576108736105f4565b5b6000610882878288016106fb565b945050602061089387828801610647565b935050604085013567ffffffffffffffff8111156108b4576108b36105f9565b5b6108c08782880161071f565b925092505092959194509250565b6108d78161061e565b82525050565b60006020820190506108f260008301846108ce565b92915050565b600082825260208201905092915050565b7f696e697469616c697a6564000000000000000000000000000000000000000000600082015250565b600061093f600b836108f8565b915061094a82610909565b602082019050919050565b6000602082019050818103600083015261096e81610932565b9050919050565b7f4e6f7420666163746f7279000000000000000000000000000000000000000000600082015250565b60006109ab600b836108f8565b91506109b682610975565b602082019050919050565b600060208201905081810360008301526109da8161099e565b9050919050565b6000819050919050565b6000610a06610a016109fc846105fe565b6109e1565b6105fe565b9050919050565b6000610a18826109eb565b9050919050565b6000610a2a82610a0d565b9050919050565b610a3a81610a1f565b82525050565b610a49816106da565b82525050565b6000604082019050610a646000830185610a31565b610a716020830184610a40565b9392505050565b610a8181610824565b8114610a8c57600080fd5b50565b600081519050610a9e81610a78565b92915050565b600060208284031215610aba57610ab96105f4565b5b6000610ac884828501610a8f565b91505092915050565b7f4e6f74206f776e65720000000000000000000000000000000000000000000000600082015250565b6000610b076009836108f8565b9150610b1282610ad1565b602082019050919050565b60006020820190508181036000830152610b3681610afa565b9050919050565b7f44656c6567617465206973207265717569726564000000000000000000000000600082015250565b6000610b736014836108f8565b9150610b7e82610b3d565b602082019050919050565b60006020820190508181036000830152610ba281610b66565b9050919050565b600081905092915050565b82818337600083830152505050565b6000610bcf8385610ba9565b9350610bdc838584610bb4565b82840190509392505050565b6000610bf5828486610bc3565b91508190509392505050565b7f43616c6c206661696c6564000000000000000000000000000000000000000000600082015250565b6000610c37600b836108f8565b9150610c4282610c01565b602082019050919050565b60006020820190508181036000830152610c6681610c2a565b905091905056fea2646970667358221220af48496b28ce0f2ab2842d1d599da2e2090072e0691df44150be4cb2bb471e7b64736f6c63430008110033a2646970667358221220504a07a33d943b2f43937f4b78e43f12cd2be0a0e09746980e6639236cb120b164736f6c63430008110033";

type WalletFactoryConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: WalletFactoryConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class WalletFactory__factory extends ContractFactory {
  constructor(...args: WalletFactoryConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _forwarder: PromiseOrValue<string>,
    _feeReceiver: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<WalletFactory> {
    return super.deploy(
      _forwarder,
      _feeReceiver,
      overrides || {}
    ) as Promise<WalletFactory>;
  }
  override getDeployTransaction(
    _forwarder: PromiseOrValue<string>,
    _feeReceiver: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _forwarder,
      _feeReceiver,
      overrides || {}
    );
  }
  override attach(address: string): WalletFactory {
    return super.attach(address) as WalletFactory;
  }
  override connect(signer: Signer): WalletFactory__factory {
    return super.connect(signer) as WalletFactory__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): WalletFactoryInterface {
    return new utils.Interface(_abi) as WalletFactoryInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): WalletFactory {
    return new Contract(address, _abi, signerOrProvider) as WalletFactory;
  }
}
