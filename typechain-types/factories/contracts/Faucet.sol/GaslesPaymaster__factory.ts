/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  GaslesPaymaster,
  GaslesPaymasterInterface,
} from "../../../contracts/Faucet.sol/GaslesPaymaster";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "newTarget",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "by",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "status",
        type: "bool",
      },
    ],
    name: "TargetChanged",
    type: "event",
  },
  {
    inputs: [],
    name: "CALLDATA_SIZE_LIMIT",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "FORWARDER_HUB_OVERHEAD",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "PAYMASTER_ACCEPTANCE_BUDGET",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "POST_RELAYED_CALL_GAS_LIMIT",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "PRE_RELAYED_CALL_GAS_LIMIT",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "member",
        type: "address",
      },
    ],
    name: "addToOwner",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "getGasAndDataLimits",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "acceptanceBudget",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "preRelayedCallGasLimit",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "postRelayedCallGasLimit",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "calldataSizeLimit",
            type: "uint256",
          },
        ],
        internalType: "struct IPaymaster.GasAndDataLimits",
        name: "limits",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getRelayHub",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getTrustedForwarder",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "context",
        type: "bytes",
      },
      {
        internalType: "bool",
        name: "success",
        type: "bool",
      },
      {
        internalType: "uint256",
        name: "gasUseWithoutPost",
        type: "uint256",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "maxFeePerGas",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "maxPriorityFeePerGas",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "transactionCalldataGasUsed",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "relayWorker",
            type: "address",
          },
          {
            internalType: "address",
            name: "paymaster",
            type: "address",
          },
          {
            internalType: "address",
            name: "forwarder",
            type: "address",
          },
          {
            internalType: "bytes",
            name: "paymasterData",
            type: "bytes",
          },
          {
            internalType: "uint256",
            name: "clientId",
            type: "uint256",
          },
        ],
        internalType: "struct GsnTypes.RelayData",
        name: "relayData",
        type: "tuple",
      },
    ],
    name: "postRelayedCall",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "address",
                name: "from",
                type: "address",
              },
              {
                internalType: "address",
                name: "to",
                type: "address",
              },
              {
                internalType: "uint256",
                name: "value",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "gas",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "nonce",
                type: "uint256",
              },
              {
                internalType: "bytes",
                name: "data",
                type: "bytes",
              },
              {
                internalType: "uint256",
                name: "validUntilTime",
                type: "uint256",
              },
            ],
            internalType: "struct IForwarder.ForwardRequest",
            name: "request",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "maxFeePerGas",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "maxPriorityFeePerGas",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "transactionCalldataGasUsed",
                type: "uint256",
              },
              {
                internalType: "address",
                name: "relayWorker",
                type: "address",
              },
              {
                internalType: "address",
                name: "paymaster",
                type: "address",
              },
              {
                internalType: "address",
                name: "forwarder",
                type: "address",
              },
              {
                internalType: "bytes",
                name: "paymasterData",
                type: "bytes",
              },
              {
                internalType: "uint256",
                name: "clientId",
                type: "uint256",
              },
            ],
            internalType: "struct GsnTypes.RelayData",
            name: "relayData",
            type: "tuple",
          },
        ],
        internalType: "struct GsnTypes.RelayRequest",
        name: "relayRequest",
        type: "tuple",
      },
      {
        internalType: "bytes",
        name: "signature",
        type: "bytes",
      },
      {
        internalType: "bytes",
        name: "approvalData",
        type: "bytes",
      },
      {
        internalType: "uint256",
        name: "maxPossibleGas",
        type: "uint256",
      },
    ],
    name: "preRelayedCall",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IRelayHub",
        name: "hub",
        type: "address",
      },
    ],
    name: "setRelayHub",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "forwarder",
        type: "address",
      },
    ],
    name: "setTrustedForwarder",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "targets",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_target",
        type: "address",
      },
      {
        internalType: "bool",
        name: "status",
        type: "bool",
      },
    ],
    name: "updateTarget",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "versionPaymaster",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "address payable",
        name: "target",
        type: "address",
      },
    ],
    name: "withdrawRelayHubDepositTo",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b5062000032620000266200003860201b60201c565b6200004060201b60201c565b62000104565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b61252680620001146000396000f3fe60806040526004361061012d5760003560e01c80637bdf2ec7116100ab578063bbdaa3c91161006f578063bbdaa3c9146104f1578063ce1b815f1461051c578063da74222814610547578063df463a6614610570578063f2fde38b1461059b578063f9c002f7146105c45761024e565b80637bdf2ec71461041a5780638da5cb5b14610445578063921276ea14610470578063b039a88f1461049b578063b90b41cf146104c65761024e565b8063562c4784116100f2578063562c4784146103495780635c5e3db114610386578063715018a6146103b157806376fa01c3146103c85780637bb05264146103f15761024e565b8062be5dd41461025357806301ffc9a7146102915780632bd9b361146102ce5780632d14c4b7146102f75780634e26c94a146103205761024e565b3661024e57600073ffffffffffffffffffffffffffffffffffffffff16600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16036101c3576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016101ba90611561565b60405180910390fd5b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663aa67c91934306040518363ffffffff1660e01b815260040161021f91906115c2565b6000604051808303818588803b15801561023857600080fd5b505af115801561024c573d6000803e3d6000fd5b005b600080fd5b34801561025f57600080fd5b5061027a600480360381019061027591906116a6565b6105ef565b604051610288929190611814565b60405180910390f35b34801561029d57600080fd5b506102b860048036038101906102b3919061189c565b61063d565b6040516102c591906118c9565b60405180910390f35b3480156102da57600080fd5b506102f560048036038101906102f0919061193c565b61071f565b005b34801561030357600080fd5b5061031e600480360381019061031991906119ba565b610841565b005b34801561032c57600080fd5b50610347600480360381019061034291906119fa565b6108dc565b005b34801561035557600080fd5b50610370600480360381019061036b91906119fa565b61093f565b60405161037d91906118c9565b60405180910390f35b34801561039257600080fd5b5061039b61095f565b6040516103a89190611a36565b60405180910390f35b3480156103bd57600080fd5b506103c6610965565b005b3480156103d457600080fd5b506103ef60048036038101906103ea9190611a71565b610979565b005b3480156103fd57600080fd5b5061041860048036038101906104139190611b53565b610995565b005b34801561042657600080fd5b5061042f610a69565b60405161043c91906115c2565b60405180910390f35b34801561045157600080fd5b5061045a610a93565b60405161046791906115c2565b60405180910390f35b34801561047c57600080fd5b50610485610abc565b6040516104929190611bc4565b60405180910390f35b3480156104a757600080fd5b506104b0610adc565b6040516104bd9190611c4a565b60405180910390f35b3480156104d257600080fd5b506104db610b22565b6040516104e89190611a36565b60405180910390f35b3480156104fd57600080fd5b50610506610b28565b6040516105139190611a36565b60405180910390f35b34801561052857600080fd5b50610531610b2f565b60405161053e91906115c2565b60405180910390f35b34801561055357600080fd5b5061056e600480360381019061056991906119fa565b610b59565b005b34801561057c57600080fd5b50610585610c2d565b6040516105929190611a36565b60405180910390f35b3480156105a757600080fd5b506105c260048036038101906105bd91906119fa565b610c41565b005b3480156105d057600080fd5b506105d9610cc4565b6040516105e69190611a36565b60405180910390f35b606060006105fb610ccb565b61060488610d42565b61060d88610de4565b61061688610e3d565b6106208585610ea3565b61062e888888888888610eed565b91509150965096945050505050565b60007fe1ab2dea000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916148061070857507f0e083076000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916145b80610718575061071782610ff0565b5b9050919050565b600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff166107ab576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107a290611cb1565b60405180910390fd5b80600460008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055507febf9af6fc370d517820e426f720d4206119ea740b935bee7969dc68774ed382382338360405161083593929190611cd1565b60405180910390a15050565b61084961105a565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663f3fef3a382846040518363ffffffff1660e01b81526004016108a6929190611d17565b600060405180830381600087803b1580156108c057600080fd5b505af11580156108d4573d6000803e3d6000fd5b505050505050565b6108e461105a565b6001600360008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff02191690831515021790555050565b60046020528060005260406000206000915054906101000a900460ff1681565b61290481565b61096d61105a565b61097760006110d8565b565b610981610ccb565b61098e858585858561119c565b5050505050565b61099d61105a565b6109e67fe9fb30f7000000000000000000000000000000000000000000000000000000008273ffffffffffffffffffffffffffffffffffffffff166111a390919063ffffffff16565b610a25576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a1c90611d8c565b60405180910390fd5b80600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60606040518060600160405280602981526020016124c860299139905090565b610ae46114dc565b604051806080016040528061c350620186a0610b009190611ddb565b8152602001620186a081526020016201adb08152602001612904815250905090565b61c35081565b6201adb081565b6000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b610b6161105a565b610baa7f25e23e64000000000000000000000000000000000000000000000000000000008273ffffffffffffffffffffffffffffffffffffffff166111a390919063ffffffff16565b610be9576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610be090611e5b565b60405180910390fd5b80600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b61c350620186a0610c3e9190611ddb565b81565b610c4961105a565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610cb8576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610caf90611eed565b60405180910390fd5b610cc1816110d8565b50565b620186a081565b610cd3610a69565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610d40576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d3790611f59565b60405180910390fd5b565b808060200190610d529190611f88565b60a0016020810190610d6491906119fa565b73ffffffffffffffffffffffffffffffffffffffff16610d82610b2f565b73ffffffffffffffffffffffffffffffffffffffff1614610dd8576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610dcf90611ffd565b60405180910390fd5b610de1816111c8565b50565b6000818060000190610df6919061201d565b6040013514610e3a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610e3190612091565b60405180910390fd5b50565b6000818060200190610e4f9190611f88565b8060c00190610e5e91906120b1565b905014610ea0576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610e9790612160565b60405180910390fd5b50565b60008282905014610ee9576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ee0906121cc565b60405180910390fd5b5050565b6060600060046000898060000190610f05919061201d565b6020016020810190610f1791906119fa565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16610f9e576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610f9590612238565b60405180910390fd5b878060000190610fae919061201d565b6000016020810190610fc091906119fa565b604051602001610fd091906115c2565b604051602081830303815290604052600091509150965096945050505050565b60007f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149050919050565b6110626113c8565b73ffffffffffffffffffffffffffffffffffffffff16611080610a93565b73ffffffffffffffffffffffffffffffffffffffff16146110d6576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016110cd906122a4565b60405180910390fd5b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b5050505050565b60006111ae836113d0565b80156111c057506111bf838361141d565b5b905092915050565b6000808280600001906111db919061201d565b60200160208101906111ed91906119fa565b73ffffffffffffffffffffffffffffffffffffffff1663572b6c0560e01b84806020019061121b9190611f88565b60a001602081019061122d91906119fa565b60405160240161123d91906115c2565b604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff83818316178352505050506040516112a79190612300565b600060405180830381855afa9150503d80600081146112e2576040519150601f19603f3d011682016040523d82523d6000602084013e6112e7565b606091505b50915091508161132c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161132390612363565b60405180910390fd5b6020815114611370576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611367906123cf565b60405180910390fd5b808060200190518101906113849190612404565b6113c3576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016113ba9061247d565b60405180910390fd5b505050565b600033905090565b60006113fc827f01ffc9a70000000000000000000000000000000000000000000000000000000061141d565b801561141657506114148263ffffffff60e01b61141d565b155b9050919050565b6000806301ffc9a760e01b8360405160240161143991906124ac565b604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff838183161783525050505090506000806000602060008551602087018a617530fa92503d915060005190508280156114c4575060208210155b80156114d05750600081115b94505050505092915050565b6040518060800160405280600081526020016000815260200160008152602001600081525090565b600082825260208201905092915050565b7f72656c6179206875622061646472657373206e6f742073657400000000000000600082015250565b600061154b601983611504565b915061155682611515565b602082019050919050565b6000602082019050818103600083015261157a8161153e565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006115ac82611581565b9050919050565b6115bc816115a1565b82525050565b60006020820190506115d760008301846115b3565b92915050565b600080fd5b600080fd5b600080fd5b600060408284031215611602576116016115e7565b5b81905092915050565b600080fd5b600080fd5b600080fd5b60008083601f8401126116305761162f61160b565b5b8235905067ffffffffffffffff81111561164d5761164c611610565b5b60208301915083600182028301111561166957611668611615565b5b9250929050565b6000819050919050565b61168381611670565b811461168e57600080fd5b50565b6000813590506116a08161167a565b92915050565b600080600080600080608087890312156116c3576116c26115dd565b5b600087013567ffffffffffffffff8111156116e1576116e06115e2565b5b6116ed89828a016115ec565b965050602087013567ffffffffffffffff81111561170e5761170d6115e2565b5b61171a89828a0161161a565b9550955050604087013567ffffffffffffffff81111561173d5761173c6115e2565b5b61174989828a0161161a565b9350935050606061175c89828a01611691565b9150509295509295509295565b600081519050919050565b600082825260208201905092915050565b60005b838110156117a3578082015181840152602081019050611788565b60008484015250505050565b6000601f19601f8301169050919050565b60006117cb82611769565b6117d58185611774565b93506117e5818560208601611785565b6117ee816117af565b840191505092915050565b60008115159050919050565b61180e816117f9565b82525050565b6000604082019050818103600083015261182e81856117c0565b905061183d6020830184611805565b9392505050565b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b61187981611844565b811461188457600080fd5b50565b60008135905061189681611870565b92915050565b6000602082840312156118b2576118b16115dd565b5b60006118c084828501611887565b91505092915050565b60006020820190506118de6000830184611805565b92915050565b6118ed816115a1565b81146118f857600080fd5b50565b60008135905061190a816118e4565b92915050565b611919816117f9565b811461192457600080fd5b50565b60008135905061193681611910565b92915050565b60008060408385031215611953576119526115dd565b5b6000611961858286016118fb565b925050602061197285828601611927565b9150509250929050565b600061198782611581565b9050919050565b6119978161197c565b81146119a257600080fd5b50565b6000813590506119b48161198e565b92915050565b600080604083850312156119d1576119d06115dd565b5b60006119df85828601611691565b92505060206119f0858286016119a5565b9150509250929050565b600060208284031215611a1057611a0f6115dd565b5b6000611a1e848285016118fb565b91505092915050565b611a3081611670565b82525050565b6000602082019050611a4b6000830184611a27565b92915050565b60006101008284031215611a6857611a676115e7565b5b81905092915050565b600080600080600060808688031215611a8d57611a8c6115dd565b5b600086013567ffffffffffffffff811115611aab57611aaa6115e2565b5b611ab78882890161161a565b95509550506020611aca88828901611927565b9350506040611adb88828901611691565b925050606086013567ffffffffffffffff811115611afc57611afb6115e2565b5b611b0888828901611a51565b9150509295509295909350565b6000611b20826115a1565b9050919050565b611b3081611b15565b8114611b3b57600080fd5b50565b600081359050611b4d81611b27565b92915050565b600060208284031215611b6957611b686115dd565b5b6000611b7784828501611b3e565b91505092915050565b600081519050919050565b6000611b9682611b80565b611ba08185611504565b9350611bb0818560208601611785565b611bb9816117af565b840191505092915050565b60006020820190508181036000830152611bde8184611b8b565b905092915050565b611bef81611670565b82525050565b608082016000820151611c0b6000850182611be6565b506020820151611c1e6020850182611be6565b506040820151611c316040850182611be6565b506060820151611c446060850182611be6565b50505050565b6000608082019050611c5f6000830184611bf5565b92915050565b7f556e617574686f72697a65640000000000000000000000000000000000000000600082015250565b6000611c9b600c83611504565b9150611ca682611c65565b602082019050919050565b60006020820190508181036000830152611cca81611c8e565b9050919050565b6000606082019050611ce660008301866115b3565b611cf360208301856115b3565b611d006040830184611805565b949350505050565b611d118161197c565b82525050565b6000604082019050611d2c6000830185611d08565b611d396020830184611a27565b9392505050565b7f746172676574206973206e6f7420612076616c6964204952656c617948756200600082015250565b6000611d76601f83611504565b9150611d8182611d40565b602082019050919050565b60006020820190508181036000830152611da581611d69565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000611de682611670565b9150611df183611670565b9250828201905080821115611e0957611e08611dac565b5b92915050565b7f746172676574206973206e6f7420612076616c69642049466f72776172646572600082015250565b6000611e45602083611504565b9150611e5082611e0f565b602082019050919050565b60006020820190508181036000830152611e7481611e38565b9050919050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b6000611ed7602683611504565b9150611ee282611e7b565b604082019050919050565b60006020820190508181036000830152611f0681611eca565b9050919050565b7f63616e206f6e6c792062652063616c6c65642062792052656c61794875620000600082015250565b6000611f43601e83611504565b9150611f4e82611f0d565b602082019050919050565b60006020820190508181036000830152611f7281611f36565b9050919050565b600080fd5b600080fd5b600080fd5b60008235600161010003833603038112611fa557611fa4611f79565b5b80830191505092915050565b7f466f72776172646572206973206e6f7420747275737465640000000000000000600082015250565b6000611fe7601883611504565b9150611ff282611fb1565b602082019050919050565b6000602082019050818103600083015261201681611fda565b9050919050565b60008235600160e00383360303811261203957612038611f79565b5b80830191505092915050565b7f76616c7565207472616e73666572206e6f7420737570706f7274656400000000600082015250565b600061207b601c83611504565b915061208682612045565b602082019050919050565b600060208201905081810360008301526120aa8161206e565b9050919050565b600080833560016020038436030381126120ce576120cd611f79565b5b80840192508235915067ffffffffffffffff8211156120f0576120ef611f7e565b5b60208301925060018202360383131561210c5761210b611f83565b5b509250929050565b7f73686f756c642068617665206e6f207061796d61737465724461746100000000600082015250565b600061214a601c83611504565b915061215582612114565b602082019050919050565b600060208201905081810360008301526121798161213d565b9050919050565b7f73686f756c642068617665206e6f20617070726f76616c446174610000000000600082015250565b60006121b6601b83611504565b91506121c182612180565b602082019050919050565b600060208201905081810360008301526121e5816121a9565b9050919050565b7f556e61636365707461626c652054617267657400000000000000000000000000600082015250565b6000612222601383611504565b915061222d826121ec565b602082019050919050565b6000602082019050818103600083015261225181612215565b9050919050565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b600061228e602083611504565b915061229982612258565b602082019050919050565b600060208201905081810360008301526122bd81612281565b9050919050565b600081905092915050565b60006122da82611769565b6122e481856122c4565b93506122f4818560208601611785565b80840191505092915050565b600061230c82846122cf565b915081905092915050565b7f697354727573746564466f727761726465723a20726576657274656400000000600082015250565b600061234d601c83611504565b915061235882612317565b602082019050919050565b6000602082019050818103600083015261237c81612340565b9050919050565b7f697354727573746564466f727761726465723a2062616420726573706f6e7365600082015250565b60006123b9602083611504565b91506123c482612383565b602082019050919050565b600060208201905081810360008301526123e8816123ac565b9050919050565b6000815190506123fe81611910565b92915050565b60006020828403121561241a576124196115dd565b5b6000612428848285016123ef565b91505092915050565b7f696e76616c696420666f7277617264657220666f7220726563697069656e7400600082015250565b6000612467601f83611504565b915061247282612431565b602082019050919050565b600060208201905081810360008301526124968161245a565b9050919050565b6124a681611844565b82525050565b60006020820190506124c1600083018461249d565b9291505056fe332e302e302d626574612e332b6f70656e67736e2e77686974656c6973742e697061796d6173746572a2646970667358221220e44eb25c78bccf5cc2735cb7d5883d067e41c9f488da030ef89a7cf7ea4c429e64736f6c63430008110033";

type GaslesPaymasterConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: GaslesPaymasterConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class GaslesPaymaster__factory extends ContractFactory {
  constructor(...args: GaslesPaymasterConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<GaslesPaymaster> {
    return super.deploy(overrides || {}) as Promise<GaslesPaymaster>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): GaslesPaymaster {
    return super.attach(address) as GaslesPaymaster;
  }
  override connect(signer: Signer): GaslesPaymaster__factory {
    return super.connect(signer) as GaslesPaymaster__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): GaslesPaymasterInterface {
    return new utils.Interface(_abi) as GaslesPaymasterInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): GaslesPaymaster {
    return new Contract(address, _abi, signerOrProvider) as GaslesPaymaster;
  }
}
